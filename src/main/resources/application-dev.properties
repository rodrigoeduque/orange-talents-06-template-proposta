
spring.output.ansi.enabled=ALWAYS


spring.datasource.url=jdbc:mysql://localhost:3308/proposta_dbteste?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=123456
spring.jpa.hibernate.ddl-auto=update

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect


spring.jpa.show-sql = true

##ACTUATOR
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.endpoint.health.show-details=always

#Argumentos para configuração de agendamentos (valor em milisegundos) onde :

periodo.execucao-agendamento=10000
periodo.delay-primeira-execucao=1000


#ACESSOS EXTERNOS
analise.financeira.url=${ANALISE_FINANCEIRA_URL}
cartao.url=${CARTAO_URL}


#KEYCLOAK
keycloak.realm                      = proposta
keycloak.auth-server-url            = http://localhost:18080/auth
keycloak.ssl-required               = external
keycloak.resource                   = propostas
keycloak.credentials.secret         = dd7d7a0e-69f1-48c5-8236-2e83c39ad497
keycloak.use-resource-role-mappings = true
keycloak.bearer-only                = true


management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoints.prometheus.enabled=true


## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}
